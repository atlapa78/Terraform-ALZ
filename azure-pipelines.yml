# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'Terraform-lab-rg'
  bkstrgacc: 'alcavdes1tsa1'
  bkcontainer: 'terraform'
  bkstrgkey: 'terraformalz.tfstate'

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              commandOptions: '-force-copy'
              backendServiceArm: 'terraform SP - AZ -Students'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrgacc)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV4@4
            displayName: Validate
            inputs:
              provider: 'azurerm'
              command: 'validate'
  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              //commandOptions: '-force-copy'
              backendServiceArm: 'terraform SP - AZ -Students'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrgacc)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)' 
          - task: TerraformTaskV4@4
            displayName: Plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-var-file parameters.tfvars'
              environmentServiceNameAzureRM: 'terraform SP - AZ -Students'
          - task: TerraformTaskV4@4
            displayName: Apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: '-var-file parameters.tfvars'
              environmentServiceNameAzureRM: 'terraform SP - AZ -Students'


